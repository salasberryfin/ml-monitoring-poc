version: '3.8'
services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    container_name: elasticsearch-ml-monitoring
    environment:
      - node.name=elasticsearch01
      - discovery.type=single-node # run in single-node mode for development
    volumes:
      # - certs:/usr/share/elasticsearch/config/certs
      - esdata:/usr/share/elasticsearch/data
    ports:
      - ${ES_PORT}:9200
      # - 9300:9300
    networks:
      - elastic
    user: "0"
    healthcheck:
      test: [
        "CMD-SHELL",
        "curl http://localhost:9200",
      ]
      interval: 10s
      timeout: 10s
      retries: 120

  kibana:
    depends_on:
      elasticsearch:
        condition: service_healthy
    image: docker.elastic.co/kibana/kibana:${STACK_VERSION}
    container_name: kibana-ml-monitoring
    environment:
      SERVERNAME: kibana
      #ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
      ELASTICSEARCH_USERNAME: kibana_system
      ELASTICSEARCH_PASSWORD: ${KIBANA_PASSWORD}
    volumes:
      - kibanadata:/usr/share/kibana/data
    ports:
      - ${KIBANA_PORT}:5601
    networks:
      - elastic
    mem_limit: ${MEM_LIMIT}
    healthcheck:
      test: [
        "CMD-SHELL",
        "curl http://localhost:5601"
      ]
      interval: 10s
      timeout: 10s
      retries: 120

volumes:
  esdata:
    driver: local
  kibanadata:
    driver: local
  # certs:
  #   driver: local

networks:
  elastic:
    driver: bridge
